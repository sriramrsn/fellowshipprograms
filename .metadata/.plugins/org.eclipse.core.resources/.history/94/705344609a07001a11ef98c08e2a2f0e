package com.bridgelabz.fellowshipprograms.algorithm;

public class Mergesort {
	public static void mergesort(int[] a,int l,int n)
	{
		if(l<n)
		{
			int m= (l+n)/2;
			mergesort(a,l,m);
			mergesort(a,m+1 ,n);
			merge(a,l,m,n);
		}
	}
	public static void merge(int[]a,int l,int m,int n)
	{
		int a1=m-l+1;
		int a2=n-m;
		int x[] =new int[a1];
		int y[]=new int[a2];
		for(int i=0;i<a1;i++)
		{
			x[i]=a[l+i];
		}
		for(int j=0;j<a2;j++)
		{
			y[j]=a[m+1+j];
		}
		int i=0,j=0,k=l;
		while(i<a1 && j<a2)
		{
			if(x[i]<=y[j])
			{
				a[k]=x[i];
				i++;
			}else
			{
				a[k]=y[j];
				j++;
			}
			k++;
		}
		while(i<a1)
		{
			a[k]= x[i];
			i++;
			k++;
		}
		while(j<a2)
		{
			a[k]=y[j];
			j++;
			k++;
		}
		
	}
	public static void main(String args[])
	{
		int[]a= {9,3,4,5,1,6,10,8};
		mergesort(a, 0, a.length-1);
		for(int i=0;i<a.length;i++)
		{
			System.out.println(a[i]);
		}
	}

}
